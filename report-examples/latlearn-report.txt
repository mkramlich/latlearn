Latency Report (https://github.com/mkramlich/latlearn)

latlearn_should_subtract_overhead: true
metric treated as overhead: LL.no-op, min
since LL init: 416,476,761 ns

Go ver:         go1.20.4
GOARCH:         amd64
GOOS:           darwin
NumCPU:         4
GOMAXPROCS:     4
NumGoroutine:   1
SetMemoryLimit: 9,223,372,036,854,775,807 bytes
GOGC:           
kern.ostype                : Darwin
kern.osproductversion      : 10.15.3
kern.osrelease             : 19.3.0
kern.osrevision            : 199506
kern.version               : Darwin Kernel Version 19.3.0: Fri Jan 10 21:15:49 PST 2020; root:xnu-6153.81.5~4/RELEASE_X86_64
user.posix2_version        : 200112
machdep.cpu.brand_string   : Intel(R) Core(TM) i3-1000NG4 CPU @ 1.10GHz
machdep.cpu.core_count     : 2
machdep.cpu.thread_count   : 4
machdep.memmap.Conventional: 8380841984
hw.memsize                 : 8589934592
hw.pagesize                : 4096
hw.cpufrequency            : 1100000000
hw.busfrequency            : 400000000
LINES:          ?
COLUMNS:        ?
HOST:           
TERM:           xterm-256color


span                           :        min (ns) |       last (ns) |        max (ns) |       mean (ns) | weight (B&As) |   time frac | span                 
print-yo                       :           2,261 |           2,261 |           2,261 |           2,261 | w           1 | tf 0.000006 | print-yo             
fn1                            :           1,796 |           1,796 |           1,796 |           1,796 | w           1 | tf 0.000004 | fn1                  
fn2                            :               0 |               9 |          20,574 |               8 | w     100,234 | tf 0.020093 | fn2                  
LL.no-op                       :              75 |               6 |         241,095 |              12 | w   1,000,000 | tf 0.210162 | LL.no-op             
LL.fn-call-return              :               3 |               7 |              63 |               8 | w       1,000 | tf 0.000201 | LL.fn-call-return    
LL.for-iters(n=1000)           :             341 |             343 |           6,875 |             360 | w       1,000 | tf 0.001045 | LL.for-iters(n=1000) 
LL.accum-ints(n=1000)          :             348 |             354 |             506 |             353 | w       1,000 | tf 0.001029 | LL.accum-ints(n=1000)
LL.add-int-literals(n=2)       :               4 |               7 |              11 |               7 | w       1,000 | tf 0.000198 | LL.add-int-literals(n=2)
LL.add-str-literals(n=2)       :               4 |               8 |              35 |               8 | w       1,000 | tf 0.000200 | LL.add-str-literals(n=2)
LL.map-str-int-set             :              22 |              27 |           2,298 |              29 | w       1,000 | tf 0.000252 | LL.map-str-int-set   
LL.map-str-int-get(k=100,key0) :              15 |              30 |         227,181 |             256 | w       1,000 | tf 0.000796 | LL.map-str-int-get(k=100,key0)
LL.map-str-int-get(k=100,key49):              17 |              62 |             280 |              53 | w       1,000 | tf 0.000308 | LL.map-str-int-get(k=100,key49)
LL.map-str-int-get(k=100,key99):              21 |              51 |          20,375 |              74 | w       1,000 | tf 0.000360 | LL.map-str-int-get(k=100,key99)
LL.span-map-lookup             :              15 |              17 |           2,518 |              32 | w       1,000 | tf 0.000259 | LL.span-map-lookup   
LL.sort-strs(n=10)             :             297 |             329 |           5,020 |             340 | w       1,000 | tf 0.000998 | LL.sort-strs(n=10)   
LL.log-hellos(n=10)            :          41,211 |          41,211 |          41,211 |          41,211 | w           1 | tf 0.000099 | LL.log-hellos(n=10)  
LL.benchmarks-total            :     189,541,740 |     189,541,740 |     189,541,740 |     189,541,740 | w           1 | tf 0.455108 | LL.benchmarks-total  
LL.lat-report                  :      26,817,750 |      28,652,184 |      32,283,513 |      29,292,389 | w           7 | tf 0.492338 | LL.lat-report        
totally-adhoc                  :              37 |              37 |              52 |              44 | w           2 | tf 0.000001 | totally-adhoc        
fn3                            :              45 |           6,345 |           6,345 |           2,150 | w           3 | tf 0.000016 | fn3                  
fn3(n=1)                       :              45 |              45 |              45 |              45 | w           1 | tf 0.000000 | fn3(n=1)             
fn3(n=50)                      :              61 |              61 |              61 |              61 | w           1 | tf 0.000000 | fn3(n=50)            
fn3(n=20000)                   :           6,345 |           6,345 |           6,345 |           6,345 | w           1 | tf 0.000015 | fn3(n=20000)         
fn4                            :             170 |          15,148 |         324,775 |          17,490 | w         103 | tf 0.004344 | fn4                  
fn4(a=1,b=1)                   :             170 |             170 |             170 |             170 | w           1 | tf 0.000001 | fn4(a=1,b=1)         
fn4(a=1,b=100)                 :             246 |             246 |             246 |             246 | w           1 | tf 0.000001 | fn4(a=1,b=100)       
fn4(a=10,b=20)                 :           1,644 |           1,644 |           1,644 |           1,644 | w           1 | tf 0.000004 | fn4(a=10,b=20)       
fn4(a=1000,b=15)               :           8,431 |          15,148 |         324,775 |          17,994 | w         100 | tf 0.004339 | fn4(a=1000,b=15)     
