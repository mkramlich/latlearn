Latency Report (https://github.com/mkramlich/latlearn)

latlearn_should_subtract_overhead: true
metric treated as overhead: LL.no-op, min
since LL init: 430,257,570 ns

Go ver:         go1.20.4
GOARCH:         amd64
GOOS:           darwin
NumCPU:         4
GOMAXPROCS:     4
NumGoroutine:   1
SetMemoryLimit: 9,223,372,036,854,775,807 bytes
GOGC:           
kern.ostype                : Darwin
kern.osproductversion      : 10.15.3
kern.osrelease             : 19.3.0
kern.osrevision            : 199506
kern.version               : Darwin Kernel Version 19.3.0: Fri Jan 10 21:15:49 PST 2020; root:xnu-6153.81.5~4/RELEASE_X86_64
user.posix2_version        : 200112
machdep.cpu.brand_string   : Intel(R) Core(TM) i3-1000NG4 CPU @ 1.10GHz
machdep.cpu.core_count     : 2
machdep.cpu.thread_count   : 4
machdep.memmap.Conventional: 8380841984
hw.memsize                 : 8589934592
hw.pagesize                : 4096
hw.cpufrequency            : 1100000000
hw.busfrequency            : 400000000
LINES:          ?
COLUMNS:        ?
HOST:           
TERM:           xterm-256color


span                           :        min (ns) |       last (ns) |        max (ns) |       mean (ns) | weight (B&As) |   time frac | span                 
print-yo                       :           2,268 |           2,268 |           2,268 |           2,268 | w           1 | tf 0.000005 | print-yo             
fn1                            :           2,159 |           2,159 |           2,159 |           2,159 | w           1 | tf 0.000005 | fn1                  
fn2                            :               0 |               7 |          27,883 |               8 | w     100,234 | tf 0.019696 | fn2                  
LL.no-op                       :              76 |               6 |         321,099 |              10 | w   1,000,000 | tf 0.200351 | LL.no-op             
LL.fn-call-return              :               3 |               7 |              20 |               6 | w       1,000 | tf 0.000192 | LL.fn-call-return    
LL.for-iters(n=1000)           :             340 |             344 |             473 |             342 | w       1,000 | tf 0.000973 | LL.for-iters(n=1000) 
LL.accum-ints(n=1000)          :             338 |             342 |             371 |             344 | w       1,000 | tf 0.000976 | LL.accum-ints(n=1000)
LL.add-int-literals(n=2)       :               2 |               6 |              58 |               7 | w       1,000 | tf 0.000195 | LL.add-int-literals(n=2)
LL.add-str-literals(n=2)       :               2 |               4 |              59 |               5 | w       1,000 | tf 0.000190 | LL.add-str-literals(n=2)
LL.map-str-int-set             :              21 |              25 |             357 |              25 | w       1,000 | tf 0.000236 | LL.map-str-int-set   
LL.map-str-int-get(k=100,key0) :              13 |              56 |             549 |              31 | w       1,000 | tf 0.000249 | LL.map-str-int-get(k=100,key0)
LL.map-str-int-get(k=100,key49):              20 |             146 |             146 |              54 | w       1,000 | tf 0.000303 | LL.map-str-int-get(k=100,key49)
LL.map-str-int-get(k=100,key99):              19 |              92 |           7,184 |              63 | w       1,000 | tf 0.000324 | LL.map-str-int-get(k=100,key99)
LL.span-map-lookup             :              20 |              23 |          32,820 |              87 | w       1,000 | tf 0.000379 | LL.span-map-lookup   
LL.sort-strs(n=10)             :             335 |             401 |          17,848 |             404 | w       1,000 | tf 0.001116 | LL.sort-strs(n=10)   
LL.log-hellos(n=10)            :          51,182 |          51,182 |          51,182 |          51,182 | w           1 | tf 0.000119 | LL.log-hellos(n=10)  
LL.byte-array-make(n=1)        :               2 |              35 |          18,122 |              44 | w       1,000 | tf 0.000281 | LL.byte-array-make(n=1)
LL.byte-array-make(n=1k)       :               2 |              10 |          14,187 |              62 | w       1,000 | tf 0.000323 | LL.byte-array-make(n=1k)
LL.byte-array-make(n=100k)     :           3,726 |           4,041 |         249,048 |          12,029 | w       1,000 | tf 0.028137 | LL.byte-array-make(n=100k)
LL.benchmarks-total            :     201,008,275 |     201,008,275 |     201,008,275 |     201,008,275 | w           1 | tf 0.467181 | LL.benchmarks-total  
LL.lat-report                  :      27,902,802 |      31,306,122 |      31,306,122 |      29,537,222 | w           7 | tf 0.480552 | LL.lat-report        
totally-adhoc                  :               8 |               8 |              83 |              45 | w           2 | tf 0.000001 | totally-adhoc        
fn3                            :              45 |           6,540 |           6,540 |           2,216 | w           3 | tf 0.000016 | fn3                  
fn3(n=1)                       :              63 |              63 |              63 |              63 | w           1 | tf 0.000000 | fn3(n=1)             
fn3(n=50)                      :              45 |              45 |              45 |              45 | w           1 | tf 0.000000 | fn3(n=50)            
fn3(n=20000)                   :           6,540 |           6,540 |           6,540 |           6,540 | w           1 | tf 0.000015 | fn3(n=20000)         
fn4                            :             179 |          20,285 |         194,729 |          16,426 | w         103 | tf 0.003951 | fn4                  
fn4(a=1,b=1)                   :             179 |             179 |             179 |             179 | w           1 | tf 0.000001 | fn4(a=1,b=1)         
fn4(a=1,b=100)                 :             279 |             279 |             279 |             279 | w           1 | tf 0.000001 | fn4(a=1,b=100)       
fn4(a=10,b=20)                 :           1,722 |           1,722 |           1,722 |           1,722 | w           1 | tf 0.000004 | fn4(a=10,b=20)       
fn4(a=1000,b=15)               :           8,802 |          20,285 |         194,729 |          16,897 | w         100 | tf 0.003945 | fn4(a=1000,b=15)     
